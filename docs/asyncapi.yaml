asyncapi: 3.0.0
info:
  title: Chat Application WebSocket API
  version: 1.0.0
  description: API WebSocket pour une application de chat utilisant Socket.IO.
servers:
  websocket:
    host: votre-domaine.com
    protocol: ws
    description: Serveur WebSocket sécurisé pour l'application de chat.
  api:
    host: 'localhost:{port}'
    protocol: http
    description: Serveur APi
channels:
  user/login:
    address: user/login
    messages:
      subscribe.message:
        $ref: '#/components/messages/UserLogin'
    description: Canal pour la connexion des utilisateurs
    servers:
      - $ref: '#/servers/websocket'
  user/logout:
    address: user/logout
    messages:
      subscribe.message:
        $ref: '#/components/messages/UserLogout'
    description: Canal pour la déconnexion des utilisateurs
    servers:
      - $ref: '#/servers/websocket'
  message:
    address: message
    messages:
      publish.message:
        $ref: '#/components/messages/RoomMessage'
      subscribe.message:
        $ref: '#/components/messages/RoomMessage'
    description: Canal pour l'envoi et la réception de messages dans une salle
    servers:
      - $ref: '#/servers/websocket'
  command/nickname:
    address: command/nickname
    messages:
      publish.message:
        $ref: '#/components/messages/NicknameCommand'
    description: Canal pour changer le surnom d'un utilisateur
    servers:
      - $ref: '#/servers/websocket'
  command/create:
    address: command/create
    messages:
      publish.message:
        $ref: '#/components/messages/CreateRoomCommand'
    description: Canal pour créer une nouvelle salle
    servers:
      - $ref: '#/servers/websocket'
  command/delete:
    address: command/delete
    messages:
      publish.message:
        $ref: '#/components/messages/DeleteRoomCommand'
    description: Canal pour supprimer une salle
    servers:
      - $ref: '#/servers/websocket'
  command/join:
    address: command/join
    messages:
      publish.message:
        $ref: '#/components/messages/JoinRoomCommand'
    description: Canal pour rejoindre une salle
    servers:
      - $ref: '#/servers/websocket'
  command/quit:
    address: command/quit
    messages:
      publish.message:
        $ref: '#/components/messages/QuitRoomCommand'
    description: Canal pour quitter une salle
    servers:
      - $ref: '#/servers/websocket'
  command/users:
    address: command/users
    messages:
      publish.message:
        $ref: '#/components/messages/UsersCommand'
    description: Canal pour lister tous les utilisateurs connectés
    servers:
      - $ref: '#/servers/websocket'
  command/msg:
    address: command/msg
    messages:
      publish.message:
        $ref: '#/components/messages/PrivateMessageCommand'
    description: Canal pour envoyer un message privé à un utilisateur
    servers:
      - $ref: '#/servers/websocket'
operations:
  user/login.subscribe:
    action: send
    channel:
      $ref: '#/channels/user~1login'
    summary: Informe les autres utilisateurs lorsqu'un utilisateur se connecte.
    messages:
      - $ref: '#/channels/user~1login/messages/subscribe.message'
  user/logout.subscribe:
    action: send
    channel:
      $ref: '#/channels/user~1logout'
    summary: Informe les autres utilisateurs lorsqu'un utilisateur se déconnecte.
    messages:
      - $ref: '#/channels/user~1logout/messages/subscribe.message'
  message.publish:
    action: receive
    channel:
      $ref: '#/channels/message'
    summary: Permet d'envoyer des messages dans une salle.
    messages:
      - $ref: '#/channels/message/messages/publish.message'
  message.subscribe:
    action: send
    channel:
      $ref: '#/channels/message'
    summary: Permet de recevoir des messages dans une salle.
    messages:
      - $ref: '#/channels/message/messages/subscribe.message'
  command/nickname.publish:
    action: receive
    channel:
      $ref: '#/channels/command~1nickname'
    summary: Permet à un utilisateur de changer son surnom.
    messages:
      - $ref: '#/channels/command~1nickname/messages/publish.message'
  command/create.publish:
    action: receive
    channel:
      $ref: '#/channels/command~1create'
    summary: Permet de créer une nouvelle salle.
    messages:
      - $ref: '#/channels/command~1create/messages/publish.message'
  command/delete.publish:
    action: receive
    channel:
      $ref: '#/channels/command~1delete'
    summary: Permet de supprimer une salle.
    messages:
      - $ref: '#/channels/command~1delete/messages/publish.message'
  command/join.publish:
    action: receive
    channel:
      $ref: '#/channels/command~1join'
    summary: Permet à un utilisateur de rejoindre une salle.
    messages:
      - $ref: '#/channels/command~1join/messages/publish.message'
  command/quit.publish:
    action: receive
    channel:
      $ref: '#/channels/command~1quit'
    summary: Permet à un utilisateur de quitter une salle.
    messages:
      - $ref: '#/channels/command~1quit/messages/publish.message'
  command/users.publish:
    action: receive
    channel:
      $ref: '#/channels/command~1users'
    summary: Liste tous les utilisateurs connectés.
    messages:
      - $ref: '#/channels/command~1users/messages/publish.message'
  command/msg.publish:
    action: receive
    channel:
      $ref: '#/channels/command~1msg'
    summary: Envoie un message privé à un utilisateur.
    messages:
      - $ref: '#/channels/command~1msg/messages/publish.message'
components:
  messages:
    UserLogin:
      name: userLogin
      payload:
        type: object
        properties:
          event:
            type: string
            enum:
              - user_login
          user:
            $ref: '#/components/schemas/User'
    UserLogout:
      name: userLogout
      payload:
        type: object
        properties:
          event:
            type: string
            enum:
              - user_logout
          user:
            $ref: '#/components/schemas/User'
    RoomMessage:
      name: roomMessage
      payload:
        type: object
        properties:
          roomId:
            type: string
          message:
            type: string
          username:
            type: string
          createdAt:
            type: string
            format: date-time
    NicknameCommand:
      name: nicknameCommand
      payload:
        type: object
        properties:
          nickname:
            type: string
    CreateRoomCommand:
      name: createRoomCommand
      payload:
        type: object
        properties:
          name:
            type: string
    DeleteRoomCommand:
      name: deleteRoomCommand
      payload:
        type: object
        properties:
          name:
            type: string
    JoinRoomCommand:
      name: joinRoomCommand
      payload:
        type: object
        properties:
          name:
            type: string
    QuitRoomCommand:
      name: quitRoomCommand
      payload:
        type: object
        properties:
          name:
            type: string
    UsersCommand:
      name: usersCommand
      payload:
        type: object
    PrivateMessageCommand:
      name: privateMessageCommand
      payload:
        type: object
        properties:
          user:
            type: string
          message:
            type: string
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        nickname:
          type: string
          nullable: true
        email:
          type: string
        password:
          type: string
        socketId:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
        lastLogin:
          type: string
          format: date-time
          nullable: true
    Room:
      type: object
      properties:
        name:
          type: string
        isDefault:
          type: boolean
        createdBy:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
    PrivateMessage:
      type: object
      properties:
        fromUser:
          type: string
          format: uuid
        toUser:
          type: string
          format: uuid
        message:
          type: string
        createdAt:
          type: string
          format: date-time
    Message:
      type: object
      properties:
        user:
          type: string
          format: uuid
        message:
          type: string
        room:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
